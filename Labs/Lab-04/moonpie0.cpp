/* Title: CSC1310 - Lab 04 Authors: Rus Hoffman Date: September 26, 2018*/
#include <iostream>
#include <vector>
using namespace std; void enterStolenMoonPies (vector<long long> &vct, long long cnt) { cout << "Enter the number stolen each day\n\n"; for (long long i = 0; i < cnt; i++) { cout << "\nDAY " << i + 1 << ": "; cin >> vct.at(i); while (cin.fail() || vct.at(i) < 0) { if(cin.fail()) { cin.clear(); cin.ignore(); cout << "an error has occurred, try again\n"; } else if( vct.at(i) < 0) cout << "only enter a postive number or zero\n"; cout << "DAY " << i + 1 << ": "; cin >> vct.at(i); } } } double averageMoonPies (long long numberOfMoonPiesTheKidStoleHowCouldSheItsSoEvil, long long numberOfDays) { return static_cast<double>(numberOfMoonPiesTheKidStoleHowCouldSheItsSoEvil) / static_cast<double>(numberOfDays); } long long highestMoonPies(vector<long long> &theBadVector, long long numElements){ long long value = theBadVector.at(0); for (long long i = 0; i < numElements; i++) value = (value < theBadVector.at(i)) ? theBadVector.at(i) : value; return value; } long long lowestMoonPies(vector<long long> theBadVector, long long numElements){ long long value = theBadVector.at(0); for (long long i = 0; i < numElements; i++) value = (value > theBadVector.at(i)) ? theBadVector.at(i) : value; return value; } int main () { long long dayCnt, net = 0; cout << "How many days did Jane steal moon pies?\n"; cin >> dayCnt; while (cin.fail() || dayCnt < 0) { if(cin.fail()) { cin.clear(); cin.ignore(); cout << "an error has occurred, try again\n"; } else if(dayCnt < 0) cout << "only enter a postive number or zero\n"; cout << "How many days did Jane steal moon pies?\n"; cin >> dayCnt; } vector<long long> theRealVector(dayCnt); enterStolenMoonPies(theRealVector, dayCnt); for (long long i = 0; i < dayCnt; i++) net += theRealVector[i]; cout << "\n\n-------------------RESULTS-------------------\nTOTAL # MOON PIES STOLEN: " << net << "\nAVERAGE # OF MOON PIES STOLEN PER DAY: " << averageMoonPies(net, dayCnt) << "\nMOST # MOON PIES STOLEN IN ONE DAY: " << highestMoonPies(theRealVector, dayCnt) << "\nLEAST # OF MOON PIES STOLEN IN ONE DAY: " << lowestMoonPies(theRealVector, dayCnt) << endl; return 0; }
